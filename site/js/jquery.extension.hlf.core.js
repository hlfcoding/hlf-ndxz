// Generated by CoffeeScript 1.6.2
(function() {
  var $;

  $ = jQuery;

  if (typeof _ === "undefined" || _ === null) {
    throw "UnderscoreJS required.";
  }

  _.templateSettings = {
    interpolate: /\{\{(.+?)\}\}/g
  };

  $.hlf = {
    createPlugin: function(ns, apiClass, asSingleton) {
      var nsDat, nsEvt;

      if (asSingleton == null) {
        asSingleton = false;
      }
      ns.apiClass = apiClass;
      nsEvt = ns.toString('event');
      nsDat = ns.toString('data');
      return function(opt, $ctx) {
        var $el, api, boilerplate, deep;

        $el = null;
        boilerplate = function() {
          var $root, _base, _base1, _base2, _base3, _ref, _ref1, _ref2, _ref3;

          $root = asSingleton === false ? $el : $ctx;
          $root.addClass(ns.toString('class'));
          if ((_ref = (_base = apiClass.prototype)._evt) == null) {
            _base._evt = function(name) {
              return "" + name + nsEvt;
            };
          }
          if ((_ref1 = (_base1 = apiClass.prototype)._dat) == null) {
            _base1._dat = function(name) {
              return "" + nsDat + name;
            };
          }
          if ((_ref2 = (_base2 = apiClass.prototype)._log) == null) {
            _base2._log = ns.debug === true ? $.hlf.log : $.noop;
          }
          if ((_ref3 = (_base3 = apiClass.prototype)._nsLog) == null) {
            _base3._nsLog = ns.toString('log');
          }
          return $root.data(ns.toString(), new apiClass($el, opt, $ctx));
        };
        if ($ctx == null) {
          $ctx = $('body');
        }
        api = this.first().data(ns.toString());
        if ((api != null) && (opt == null)) {
          return api;
        }
        opt = $.extend((deep = true), {}, ns.defaults, opt);
        if (asSingleton === false) {
          return this.each(function() {
            $el = $(this);
            return boilerplate();
          });
        } else {
          $el = this;
          return boilerplate();
        }
      };
    },
    debug: true,
    toString: function() {
      return 'hlf';
    }
  };

  $.hlf.log = $.hlf.debug === false ? $.noop : (console.log.bind ? console.log.bind(console) : console.log);

}).call(this);
